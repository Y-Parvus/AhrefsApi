/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package AhrefsApiSource

import AhrefsApi
import internal.Api
import internal.dsl.*
import internal.siteexplorer.overview.ExplorerOverviewImpl
import internal.siteexplorer.overview.IExplorerOverview
import io.ktor.client.*
import io.ktor.client.engine.cio.*
import io.ktor.client.plugins.*
import io.ktor.client.plugins.contentnegotiation.*
import io.ktor.client.request.*
import io.ktor.http.*
import io.ktor.serialization.kotlinx.json.*
import kotlinx.coroutines.runBlocking
import kotlinx.serialization.json.Json
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.Test
import java.time.LocalDate

class ExplorerOverviewTest {
    lateinit var api: Api
    lateinit var explorerOverview: IExplorerOverview

    @BeforeEach
    fun setUp() {
        api = AhrefsApi.create("token")
        explorerOverview =  api.overviewApi
    }



    @Test
    fun testDomainRating() {
        val response = runBlocking {
            explorerOverview.domainRating(Field.Date(LocalDate.now()), Field.Target("ahrefs.com"))
        }
        println(response)
    }

    @Test
    fun testBacklinksStats() {
        val response = runBlocking {
            explorerOverview.backlinksStats(
                Field.Date(LocalDate.now()),
            Field.Target("google.com"))
        }
        println(response)
    }

    @Test
    fun testMetrics() {
        val response = runBlocking {
            explorerOverview.metrics(
                Field.Date(LocalDate.now()),
                Field.Target("google.com"),
                Field.Country(CountryValue.UA),
                Field.VolumeMode(VolumeModeValue.Average),
            )
        }
        println(response)
    }

    @Test
    fun testRefdomainsHistory() {
        val response = runBlocking { explorerOverview.referringDomainsHistory(
            Field.Target("google.com"),
            Field.DateFrom(LocalDate.now().minusDays(10)),
            Field.DateTo(LocalDate.now().minusDays(5)),
            Field.HistoryGrouping(HistoryGroupingValue.Monthly)
        ) }
        println(response)
    }

    @Test
    fun testUrlRating() {
        val response = runBlocking { explorerOverview.urlRating(
            Field.Target("google.com"),
            Field.DateFrom(LocalDate.now().minusDays(4)),
            Field.DateTo(LocalDate.now().minusDays(2)),
        ) }
        println(response)
    }

    @Test
    fun testMetricsHistory() {
        val response = runBlocking { explorerOverview.metricsHistory(
            Field.Target("google.com"),
            Field.DateFrom(LocalDate.now().minusDays(4)),
            Field.DateTo(LocalDate.now().minusDays(2)),
            Field.Country(CountryValue.US),
            volumeMode = Field.VolumeMode(VolumeModeValue.Average),
        ) }
        println(response)
    }

    @Test
    fun testPagesHistory() {
        val response = runBlocking { explorerOverview.pagesHistory(
            Field.Target("google.com"),
            Field.DateFrom(LocalDate.now().minusDays(4)),
            Field.DateTo(LocalDate.now().minusDays(2)),
            Field.Country(CountryValue.IT)
        ) }
        println(response)
    }

    @Test
    fun testKeywordsHistory() {
        val response = runBlocking { explorerOverview.keywordsHistory(
            Field.Target("google.com"),
            Field.DateFrom(LocalDate.now().minusDays(4)),
            Field.DateTo(LocalDate.now().minusDays(2)),
            Field.Country(CountryValue.IT)
        ) }
        println(response)
    }

    @Test
    fun testMetricsByCountry() {
        val response = runBlocking { explorerOverview.metricsByCountry(
            Field.Target("google.com"),
            Field.Date(LocalDate.now().minusDays(1)),
            Field.Limit(5)
        ) }
        println(response)
    }

    @Test
    fun testPagesByTraffic() {
        val response = runBlocking { explorerOverview.pagesByTraffic(
            Field.Target("ahrefs.com"),
            Field.Country(CountryValue.DE),
            mode = Field.Mode(ModeValue.Exact)
        ) }
        println(response)
    }
}
